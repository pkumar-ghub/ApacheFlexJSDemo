/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/core/Application.as
 * org.apache.flex.core.Application
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.core.Application');

goog.require('org.apache.flex.core.ApplicationBase');
goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.UIBase');
goog.require('org.apache.flex.core.ValuesManager');
goog.require('org.apache.flex.events.Event');
goog.require('org.apache.flex.utils.MXMLDataInterpreter');
goog.require('org.apache.flex.utils.Timer');
goog.require('org.apache.flex.core.IInitialViewApplication');
goog.require('org.apache.flex.core.IParent');
goog.require('org.apache.flex.core.IPopUpHost');
goog.require('org.apache.flex.core.IRenderedObject');
goog.require('org.apache.flex.core.IStrand');
goog.require('org.apache.flex.events.IEventDispatcher');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.core.ApplicationBase}
 * @implements {org.apache.flex.core.IStrand}
 * @implements {org.apache.flex.core.IParent}
 * @implements {org.apache.flex.events.IEventDispatcher}
 * @implements {org.apache.flex.core.IInitialViewApplication}
 * @implements {org.apache.flex.core.IPopUpHost}
 * @implements {org.apache.flex.core.IRenderedObject}
 */
org.apache.flex.core.Application = function() {
  org.apache.flex.core.Application.base(this, 'constructor');
  
  this.element = document.getElementsByTagName('body')[0];
  this.element.flexjs_wrapper = this;
  this.element.className = 'Application';
};
goog.inherits(org.apache.flex.core.Application, org.apache.flex.core.ApplicationBase);


/**
 * @private
 * @type {org.apache.flex.core.IApplicationView}
 */
org.apache.flex.core.Application.prototype._initialView;


/**
 * @private
 * @type {Object}
 */
org.apache.flex.core.Application.prototype._model;


/**
 * @export
 * @type {Object}
 */
org.apache.flex.core.Application.prototype.controller;


/**
 *  An method called by the compiler's generated
 *  code to kick off the setting of MXML attribute
 *  values and instantiation of child tags.
 *
 *  The call has to be made in the generated code
 *  in order to ensure that the constructors have
 *  completed first.
 *
 *  @asparam data The encoded data representing the
 *  MXML attributes.
 *
 *  @see org.apache.flex.utils.MXMLDataInterpreter
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {Array} data
 */
org.apache.flex.core.Application.prototype.generateMXMLAttributes = function(data) {
  org.apache.flex.utils.MXMLDataInterpreter.generateMXMLProperties(this, data);
};


/**
 * @export
 * @type {Array}
 */
org.apache.flex.core.Application.prototype.beads;


/**
 *  @copy org.apache.flex.core.IParent#addElement()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 *  @flexjsignorecoercion org.apache.flex.core.IUIBase
 *  @flexjsignorecoercion HTMLElement
 * @export
 * @param {org.apache.flex.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.flex.core.Application.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  
  this.element.appendChild(c.element);
  c.addedToParent();
};


/**
 *  @copy org.apache.flex.core.IParent#addElementAt()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 *  @flexjsignorecoercion org.apache.flex.core.IUIBase
 * @export
 * @param {org.apache.flex.core.IChild} c
 * @param {number} index
 * @param {boolean=} dispatchEvent
 */
org.apache.flex.core.Application.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  
  var /** @type {NodeList} */ children = this.internalChildren();
  if (index >= children.length)
    this.addElement(c); else {
    this.element.insertBefore(c.positioner, children[index]);
    c.addedToParent();
  }
};


/**
 *  @copy org.apache.flex.core.IParent#getElementAt()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {number} index
 * @return {org.apache.flex.core.IChild}
 */
org.apache.flex.core.Application.prototype.getElementAt = function(index) {
  
  var /** @type {NodeList} */ children = this.internalChildren();
  return children[index].flexjs_wrapper;
};


/**
 *  @copy org.apache.flex.core.IParent#getElementIndex()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {org.apache.flex.core.IChild} c
 * @return {number}
 */
org.apache.flex.core.Application.prototype.getElementIndex = function(c) {
  
  var /** @type {NodeList} */ children = this.internalChildren();
  var /** @type {number} */ n = children.length;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    if (children[i] == c.element)
      return i;
  }
  return -1;
};


/**
 *  @copy org.apache.flex.core.IParent#removeElement()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 *  @flexjsignorecoercion HTMLElement
 * @export
 * @param {org.apache.flex.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
org.apache.flex.core.Application.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  
  this.element.removeChild(c.element);
};


/**
 * @asreturn {Object} The array of children.
 * @protected
 * @return {NodeList}
 */
org.apache.flex.core.Application.prototype.internalChildren = function() {
  return this.element.childNodes;
};


/**
 * @protected
 * @type {org.apache.flex.utils.Timer}
 */
org.apache.flex.core.Application.prototype.startupTimer;


/**
 * @flexjsignorecoercion org.apache.flex.core.IBead
 * @export
 */
org.apache.flex.core.Application.prototype.start = function() {
  if (org.apache.flex.utils.Language.is(this.model, org.apache.flex.core.IBead))
    this.addBead(this.model);
  if (org.apache.flex.utils.Language.is(this.controller, org.apache.flex.core.IBead))
    this.addBead(this.controller);
  for (var /** @type {number} */ index in this.beads) {
    this.addBead(this.beads[index]);
  }
  this.dispatchEvent(new org.apache.flex.events.Event("beadsAdded"));
  if (this.dispatchEvent(new org.apache.flex.events.Event("preinitialize", false, true)))
    this.initialize(); else {
    this.startupTimer = new org.apache.flex.utils.Timer(34, 0);
    this.startupTimer.addEventListener("timer", org.apache.flex.utils.Language.closure(this.handleStartupTimer, this, 'handleStartupTimer'));
    this.startupTimer.start();
  }
};


/**
 * @asprivate
 * @protected
 * @param {org.apache.flex.events.Event} event
 */
org.apache.flex.core.Application.prototype.handleStartupTimer = function(event) {
  if (this.dispatchEvent(new org.apache.flex.events.Event("preinitialize", false, true))) {
    this.startupTimer.stop();
    this.initialize();
  }
};


/**
 * @flexjsignorecoercion org.apache.flex.core.IBead
 * @protected
 */
org.apache.flex.core.Application.prototype.initialize = function() {
  org.apache.flex.utils.MXMLDataInterpreter.generateMXMLInstances(this, null, this.MXMLDescriptor);
  this.dispatchEvent('initialize');
  this.initialView.applicationModel = this.model;
  this.addElement(this.initialView);
  if (this.initialView) {
    var /** @type {org.apache.flex.core.UIBase} */ baseView = org.apache.flex.utils.Language.as(this.initialView, org.apache.flex.core.UIBase);
    if (!isNaN(baseView.percentWidth) || !isNaN(baseView.percentHeight)) {
      this.element.style.height = window.innerHeight.toString() + 'px';
      this.element.style.width = window.innerWidth.toString() + 'px';
      this.initialView.dispatchEvent('sizeChanged');
    }
    this.dispatchEvent(new org.apache.flex.events.Event("viewChanged"));
  }
  this.dispatchEvent(new org.apache.flex.events.Event("applicationComplete"));
};


org.apache.flex.core.Application.prototype.set__valuesImpl = function(value) {
  org.apache.flex.core.ValuesManager["valuesImpl"] = value;
  org.apache.flex.core.ValuesManager["valuesImpl"].init(this);
};


org.apache.flex.core.Application.prototype.get__initialView = function() {
  return this._initialView;
};


org.apache.flex.core.Application.prototype.set__initialView = function(value) {
  this._initialView = value;
};


org.apache.flex.core.Application.prototype.get__model = function() {
  return this._model;
};


org.apache.flex.core.Application.prototype.set__model = function(value) {
  this._model = value;
};


org.apache.flex.core.Application.prototype.get__MXMLDescriptor = function() {
  return null;
};


org.apache.flex.core.Application.prototype.get__numElements = function() {
  
  var /** @type {NodeList} */ children = this.internalChildren();
  return children.length;
};


Object.defineProperties(org.apache.flex.core.Application.prototype, /** @lends {org.apache.flex.core.Application.prototype} */ {
/** @export */
valuesImpl: {
set: org.apache.flex.core.Application.prototype.set__valuesImpl},
/** @export */
initialView: {
get: org.apache.flex.core.Application.prototype.get__initialView,
set: org.apache.flex.core.Application.prototype.set__initialView},
/** @export */
model: {
get: org.apache.flex.core.Application.prototype.get__model,
set: org.apache.flex.core.Application.prototype.set__model},
/** @export */
MXMLDescriptor: {
get: org.apache.flex.core.Application.prototype.get__MXMLDescriptor},
/** @export */
numElements: {
get: org.apache.flex.core.Application.prototype.get__numElements}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.core.Application.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Application', qName: 'org.apache.flex.core.Application', kind: 'class' }], interfaces: [org.apache.flex.core.IStrand, org.apache.flex.core.IParent, org.apache.flex.events.IEventDispatcher, org.apache.flex.core.IInitialViewApplication, org.apache.flex.core.IPopUpHost, org.apache.flex.core.IRenderedObject] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.core.Application', org.apache.flex.core.Application);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.core.Application.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'controller': { type: 'Object'},
        'beads': { type: 'Array'}
      };
    },
    accessors: function () {
      return {
        'valuesImpl': { type: 'org.apache.flex.core.IValuesImpl', access: 'writeonly', declaredBy: 'org.apache.flex.core.Application'},
        'initialView': { type: 'org.apache.flex.core.IApplicationView', access: 'readwrite', declaredBy: 'org.apache.flex.core.Application'},
        'model': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.flex.core.Application', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: '__NoChangeEvent__' } ] } ]; }},
        'MXMLDescriptor': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.flex.core.Application'},
        'numElements': { type: 'int', access: 'readonly', declaredBy: 'org.apache.flex.core.Application'}
      };
    },
    methods: function () {
      return {
        'Application': { type: '', declaredBy: 'org.apache.flex.core.Application'},
        'generateMXMLAttributes': { type: 'void', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'Array', optional: false } ]; }},
        'addElement': { type: 'void', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'addElementAt': { type: 'void', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'int', optional: false },{ index: 3, type: 'Boolean', optional: true } ]; }},
        'getElementAt': { type: 'org.apache.flex.core.IChild', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'int', optional: false } ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false } ]; }},
        'removeElement': { type: 'void', declaredBy: 'org.apache.flex.core.Application', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'start': { type: 'void', declaredBy: 'org.apache.flex.core.Application'}
      };
    },
    metadata: function () { return [  ]; }
  };
};