/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/html/supportClasses/Viewport.as
 * org.apache.flex.html.supportClasses.Viewport
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.html.supportClasses.Viewport');

goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.IContentView');
goog.require('org.apache.flex.core.UIBase');
goog.require('org.apache.flex.core.ValuesManager');
goog.require('org.apache.flex.core.IViewport');
goog.require('org.apache.flex.utils.Language');



/**
 * Constructor
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @implements {org.apache.flex.core.IBead}
 * @implements {org.apache.flex.core.IViewport}
 */
org.apache.flex.html.supportClasses.Viewport = function() {
};


/**
 * @protected
 * @type {org.apache.flex.core.UIBase}
 */
org.apache.flex.html.supportClasses.Viewport.prototype.contentArea;


/**
 * @protected
 * @type {org.apache.flex.core.IStrand}
 */
org.apache.flex.html.supportClasses.Viewport.prototype._strand;


/**
 * @copy org.apache.flex.core.IViewport#setPosition()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {number} x
 * @param {number} y
 */
org.apache.flex.html.supportClasses.Viewport.prototype.setPosition = function(x, y) {
  
};


/**
 * @copy org.apache.flex.core.IViewport#layoutViewportBeforeContentLayout()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {number} width
 * @param {number} height
 */
org.apache.flex.html.supportClasses.Viewport.prototype.layoutViewportBeforeContentLayout = function(width, height) {
  
};


/**
 * @copy org.apache.flex.core.IViewport#layoutViewportAfterContentLayout()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {org.apache.flex.geom.Size} contentSize
 */
org.apache.flex.html.supportClasses.Viewport.prototype.layoutViewportAfterContentLayout = function(contentSize) {
  
};


org.apache.flex.html.supportClasses.Viewport.prototype.get__contentView = function() {
  return this.contentArea;
};


org.apache.flex.html.supportClasses.Viewport.prototype.set__strand = function(value) {
  this._strand = value;
  this.contentArea = org.apache.flex.utils.Language.as(this._strand.getBeadByType(org.apache.flex.core.IContentView), org.apache.flex.core.UIBase);
  if (!this.contentArea) {
    var /** @type {Object} */ c = org.apache.flex.core.ValuesManager["valuesImpl"].getValue(this._strand, 'iContentView');
    if (c != null) {
      var /** @type {Object} */ result = new c();
      if (result != null) {
        this.contentArea = org.apache.flex.utils.Language.as(result, org.apache.flex.core.UIBase);
        this._strand.addBead(org.apache.flex.utils.Language.as(this.contentArea, org.apache.flex.core.IBead));
      }
    }
  }
  if (this.contentArea == null) {
    this.contentArea = org.apache.flex.utils.Language.as(value, org.apache.flex.core.UIBase);
  }
  this.contentArea.element.style.overflow = "hidden";
};


Object.defineProperties(org.apache.flex.html.supportClasses.Viewport.prototype, /** @lends {org.apache.flex.html.supportClasses.Viewport.prototype} */ {
/** @export */
contentView: {
get: org.apache.flex.html.supportClasses.Viewport.prototype.get__contentView},
/** @export */
strand: {
set: org.apache.flex.html.supportClasses.Viewport.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.html.supportClasses.Viewport.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Viewport', qName: 'org.apache.flex.html.supportClasses.Viewport', kind: 'class' }], interfaces: [org.apache.flex.core.IBead, org.apache.flex.core.IViewport] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.html.supportClasses.Viewport', org.apache.flex.html.supportClasses.Viewport);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.html.supportClasses.Viewport.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'contentView': { type: 'org.apache.flex.core.IUIBase', access: 'readonly', declaredBy: 'org.apache.flex.html.supportClasses.Viewport'},
        'strand': { type: 'org.apache.flex.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.flex.html.supportClasses.Viewport'}
      };
    },
    methods: function () {
      return {
        'Viewport': { type: '', declaredBy: 'org.apache.flex.html.supportClasses.Viewport'},
        'setPosition': { type: 'void', declaredBy: 'org.apache.flex.html.supportClasses.Viewport', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'layoutViewportBeforeContentLayout': { type: 'void', declaredBy: 'org.apache.flex.html.supportClasses.Viewport', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false } ]; }},
        'layoutViewportAfterContentLayout': { type: 'void', declaredBy: 'org.apache.flex.html.supportClasses.Viewport', parameters: function () { return [  { index: 1, type: 'org.apache.flex.geom.Size', optional: false } ]; }}
      };
    }
  };
};