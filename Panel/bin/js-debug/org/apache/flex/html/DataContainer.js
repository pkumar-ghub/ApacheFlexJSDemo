/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/html/DataContainer.as
 * org.apache.flex.html.DataContainer
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.html.DataContainer');

goog.require('org.apache.flex.core.DataContainerBase');
goog.require('org.apache.flex.core.IDataProviderModel');
goog.require('org.apache.flex.core.IListPresentationModel');
goog.require('org.apache.flex.html.beads.models.ListPresentationModel');
goog.require('org.apache.flex.utils.Language');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.core.DataContainerBase}
 */
org.apache.flex.html.DataContainer = function() {
  org.apache.flex.html.DataContainer.base(this, 'constructor');
};
goog.inherits(org.apache.flex.html.DataContainer, org.apache.flex.core.DataContainerBase);


org.apache.flex.html.DataContainer.prototype.get__labelField = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IDataProviderModel, true).labelField;
};


org.apache.flex.html.DataContainer.prototype.set__labelField = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IDataProviderModel, true).labelField = value;
};


org.apache.flex.html.DataContainer.prototype.get__dataProvider = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IDataProviderModel, true).dataProvider;
};


org.apache.flex.html.DataContainer.prototype.set__dataProvider = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IDataProviderModel, true).dataProvider = value;
};


org.apache.flex.html.DataContainer.prototype.get__presentationModel = function() {
  var /** @type {org.apache.flex.core.IListPresentationModel} */ presModel = org.apache.flex.utils.Language.as(this.getBeadByType(org.apache.flex.core.IListPresentationModel), org.apache.flex.core.IListPresentationModel);
  if (presModel == null) {
    presModel = new org.apache.flex.html.beads.models.ListPresentationModel();
    this.addBead(presModel);
  }
  return presModel;
};


Object.defineProperties(org.apache.flex.html.DataContainer.prototype, /** @lends {org.apache.flex.html.DataContainer.prototype} */ {
/** @export */
labelField: {
get: org.apache.flex.html.DataContainer.prototype.get__labelField,
set: org.apache.flex.html.DataContainer.prototype.set__labelField},
/** @export */
dataProvider: {
get: org.apache.flex.html.DataContainer.prototype.get__dataProvider,
set: org.apache.flex.html.DataContainer.prototype.set__dataProvider},
/** @export */
presentationModel: {
get: org.apache.flex.html.DataContainer.prototype.get__presentationModel}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.html.DataContainer.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'DataContainer', qName: 'org.apache.flex.html.DataContainer', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.html.DataContainer', org.apache.flex.html.DataContainer);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.html.DataContainer.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'labelField': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.html.DataContainer'},
        'dataProvider': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.flex.html.DataContainer'},
        'presentationModel': { type: 'org.apache.flex.core.IListPresentationModel', access: 'readonly', declaredBy: 'org.apache.flex.html.DataContainer'}
      };
    },
    methods: function () {
      return {
        'DataContainer': { type: '', declaredBy: 'org.apache.flex.html.DataContainer'}
      };
    },
    metadata: function () { return [  ]; }
  };
};