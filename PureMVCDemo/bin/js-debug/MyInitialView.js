/**
 * Generated by Apache Flex Cross-Compiler from MyInitialView.mxml
 * MyInitialView
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('MyInitialView');

goog.require('org.apache.flex.core.View');
goog.require('org.apache.flex.states.State');
goog.require('org.apache.flex.html.Label');
goog.require('org.view.EditorView');
goog.require('org.view.ProfileView');
goog.require('org.apache.flex.html.VContainer');
goog.require('org.apache.flex.core.SimpleCSSStyles');
goog.require('org.apache.flex.html.HContainer');
goog.require('org.apache.flex.html.TextButton');
goog.require('org.apache.flex.html.Spacer');
goog.require('org.apache.flex.states.AddItems');



/**
 * @constructor
 * @extends {org.apache.flex.core.View}
 */
MyInitialView = function() {
  MyInitialView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID7_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.view.EditorView}
   */
  this.editorViewId_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.view.ProfileView}
   */
  this.profileViewId_;
  
  /**
   * @private
   * @type {org.apache.flex.html.VContainer}
   */
  this.$ID9_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HContainer}
   */
  this.$ID5_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextButton}
   */
  this.buttonId1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextButton}
   */
  this.buttonId3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID6_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID8_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  /**
   * @export
   * @type {Array}
   */
  this.mxmlsd = [
  [org.apache.flex.html.Label, 2, '_id', true, '$ID7', 'text', true, 'PUREMVC Demo: Click on Button to view demo.', 0, 0, null],
[org.view.EditorView, 3, 'id', true, 'editorViewId', 'width', true, 500, 'height', true, 250, 0, 0, null],
[org.view.ProfileView, 3, 'id', true, 'profileViewId', 'width', true, 500, 'height', true, 250, 0, 0, null],
null];
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([1,
'states',
null, [org.apache.flex.states.State, 3, '_id', true, '$ID0', 'name', true, 'default', 'overrides', null, [org.apache.flex.states.AddItems, 5, 'itemsDescriptorIndex', true, 0, 'destination', true, '$ID9', 'propertyName', true, 'mxmlContent', 'position', true, 'after', 'relativeTo', true, '$ID6', 0, 0, null], 0, 0, null, org.apache.flex.states.State, 3, '_id', true, '$ID1', 'name', true, 'editor', 'overrides', null, [org.apache.flex.states.AddItems, 5, 'itemsDescriptorIndex', true, 1, 'destination', true, '$ID9', 'propertyName', true, 'mxmlContent', 'position', true, 'after', 'relativeTo', true, '$ID8', 0, 0, null], 0, 0, null, org.apache.flex.states.State, 3, '_id', true, '$ID2', 'name', true, 'profile', 'overrides', null, [org.apache.flex.states.AddItems, 5, 'itemsDescriptorIndex', true, 2, 'destination', true, '$ID9', 'propertyName', true, 'mxmlContent', 'position', true, 'after', 'relativeTo', true, '$ID8', 0, 0, null], 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(MyInitialView, org.apache.flex.core.View);



Object.defineProperties(MyInitialView.prototype, /** @lends {MyInitialView.prototype} */ {
/** @export */
    editorViewId: {
    /** @this {MyInitialView} */
    get: function() {
      return this.editorViewId_;
    },
    /** @this {MyInitialView} */
    set: function(value) {
      if (value != this.editorViewId_) {
        this.editorViewId_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'editorViewId', null, value));
      }
    }
  },
  /** @export */
    profileViewId: {
    /** @this {MyInitialView} */
    get: function() {
      return this.profileViewId_;
    },
    /** @this {MyInitialView} */
    set: function(value) {
      if (value != this.profileViewId_) {
        this.profileViewId_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'profileViewId', null, value));
      }
    }
  },
  /** @export */
    buttonId1: {
    /** @this {MyInitialView} */
    get: function() {
      return this.buttonId1_;
    },
    /** @this {MyInitialView} */
    set: function(value) {
      if (value != this.buttonId1_) {
        this.buttonId1_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'buttonId1', null, value));
      }
    }
  },
  /** @export */
    buttonId3: {
    /** @this {MyInitialView} */
    get: function() {
      return this.buttonId3_;
    },
    /** @this {MyInitialView} */
    set: function(value) {
      if (value != this.buttonId3_) {
        this.buttonId3_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'buttonId3', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {MyInitialView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = MyInitialView.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.flex.html.VContainer,
2,
'_id',
true,
'$ID9',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 3, '_id', true, '$ID3', 'top', true, 10, 'left', true, 400, 0, 0, null],
0,
0,
[org.apache.flex.html.HContainer, 1, '_id', true, '$ID5', 0, 0, [org.apache.flex.html.TextButton, 4, 'id', true, 'buttonId1', 'text', true, 'EDITOR', 'width', true, 100, 'height', true, 40, 0, 0, null, org.apache.flex.html.Spacer, 2, '_id', true, '$ID4', 'width', true, 10, 0, 0, null, org.apache.flex.html.TextButton, 4, 'id', true, 'buttonId3', 'text', true, 'PROFILE', 'width', true, 100, 'height', true, 40, 0, 0, null], org.apache.flex.html.Spacer, 2, '_id', true, '$ID6', 'height', true, 2, 0, 0, null, org.apache.flex.html.Spacer, 2, '_id', true, '$ID8', 'height', true, 2, 0, 0, null]
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  MyInitialView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'MyInitialView', qName: 'MyInitialView', kind: 'class'  }] };
  
  
  /**
   * Prevent renaming of class. Needed for reflection.
   */
  goog.exportSymbol('MyInitialView', MyInitialView);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
MyInitialView.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'editorViewId': { type: 'org.view.EditorView', access: 'readwrite', declaredBy: 'MyInitialView'},
        'profileViewId': { type: 'org.view.ProfileView', access: 'readwrite', declaredBy: 'MyInitialView'},
        'buttonId1': { type: 'org.apache.flex.html.TextButton', access: 'readwrite', declaredBy: 'MyInitialView'},
        'buttonId3': { type: 'org.apache.flex.html.TextButton', access: 'readwrite', declaredBy: 'MyInitialView'}
      };
    },
    methods: function () {
      return {
        'MyInitialView': { type: '', declaredBy: 'MyInitialView'}
      };
    }
  };
};

  
  