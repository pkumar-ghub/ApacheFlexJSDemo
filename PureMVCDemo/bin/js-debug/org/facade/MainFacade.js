/**
 * Generated by Apache Flex Cross-Compiler from org\facade\MainFacade.as
 * org.facade.MainFacade
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.facade.MainFacade');

goog.require('org.controller.MainCommand');
goog.require('org.puremvc.as3.multicore.patterns.facade.Facade');
goog.require('org.apache.flex.utils.Language');



/**
 * @constructor
 * @extends {org.puremvc.as3.multicore.patterns.facade.Facade}
 * @param {string} key
 */
org.facade.MainFacade = function(key) {
  org.facade.MainFacade.base(this, 'constructor', key);
};
goog.inherits(org.facade.MainFacade, org.puremvc.as3.multicore.patterns.facade.Facade);


/**
 * @export
 * @const
 * @type {string}
 */
org.facade.MainFacade.STARTUP = "startup";


/**
 * @export
 * @const
 * @type {string}
 */
org.facade.MainFacade.SET_UI_RESULT = "setUIResult";


/**
 * @export
 * @param {string} key
 * @return {org.facade.MainFacade}
 */
org.facade.MainFacade.getInstance = function(key) {
  if (org.puremvc.as3.multicore.patterns.facade.Facade.instanceMap[key] == null)
    org.puremvc.as3.multicore.patterns.facade.Facade.instanceMap[key] = new org.facade.MainFacade(key);
  return org.apache.flex.utils.Language.as(org.puremvc.as3.multicore.patterns.facade.Facade.instanceMap[key], org.facade.MainFacade);
};


/**
 * @protected
 * @override
 */
org.facade.MainFacade.prototype.initializeController = function() {
  org.facade.MainFacade.superClass_.initializeController.apply(this);
  this.registerCommand(org.facade.MainFacade.STARTUP, org.controller.MainCommand);
};


/**
 * @export
 * @param {main} app
 */
org.facade.MainFacade.prototype.startup = function(app) {
  this.sendNotification(org.facade.MainFacade.STARTUP, app);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.facade.MainFacade.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'MainFacade', qName: 'org.facade.MainFacade', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.facade.MainFacade', org.facade.MainFacade);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.facade.MainFacade.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'MainFacade': { type: '', declaredBy: 'org.facade.MainFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        '|getInstance': { type: 'org.facade.MainFacade', declaredBy: 'org.facade.MainFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'startup': { type: 'void', declaredBy: 'org.facade.MainFacade', parameters: function () { return [  { index: 1, type: 'main', optional: false } ]; }}
      };
    }
  };
};