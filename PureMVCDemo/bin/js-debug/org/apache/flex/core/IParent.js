/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\core\IParent.as
 * org.apache.flex.core.IParent
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.core.IParent');

goog.require('org.apache.flex.utils.Language');



/**
 * @interface
 */
org.apache.flex.core.IParent = function() {
};
org.apache.flex.core.IParent.prototype.addElement = function(c, dispatchEvent) {
};
org.apache.flex.core.IParent.prototype.addElementAt = function(c, index, dispatchEvent) {
};
org.apache.flex.core.IParent.prototype.getElementIndex = function(c) {
};
org.apache.flex.core.IParent.prototype.removeElement = function(c, dispatchEvent) {
};
/**  * @type {number}
 */org.apache.flex.core.IParent.prototype.numElements;
org.apache.flex.core.IParent.prototype.getElementAt = function(index) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.core.IParent.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'IParent', qName: 'org.apache.flex.core.IParent', kind: 'interface' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.core.IParent', org.apache.flex.core.IParent);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.core.IParent.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'numElements': { type: 'int', access: 'readonly', declaredBy: 'org.apache.flex.core.IParent'}
      };
    },
    methods: function () {
      return {
        'addElement': { type: 'void', declaredBy: 'org.apache.flex.core.IParent', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'addElementAt': { type: 'void', declaredBy: 'org.apache.flex.core.IParent', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'int', optional: false },{ index: 3, type: 'Boolean', optional: true } ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'org.apache.flex.core.IParent', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false } ]; }},
        'removeElement': { type: 'void', declaredBy: 'org.apache.flex.core.IParent', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IChild', optional: false },{ index: 2, type: 'Boolean', optional: true } ]; }},
        'getElementAt': { type: 'org.apache.flex.core.IChild', declaredBy: 'org.apache.flex.core.IParent', parameters: function () { return [  { index: 1, type: 'int', optional: false } ]; }}
      };
    }
  };
};