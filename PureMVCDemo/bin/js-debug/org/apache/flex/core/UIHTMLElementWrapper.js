/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\core\UIHTMLElementWrapper.as
 * org.apache.flex.core.UIHTMLElementWrapper
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.core.UIHTMLElementWrapper');

goog.require('org.apache.flex.core.ElementWrapper');
goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.IBeadModel');
goog.require('org.apache.flex.core.ValuesManager');
goog.require('org.apache.flex.events.Event');
goog.require('org.apache.flex.core.IStrandWithModel');
goog.require('org.apache.flex.events.IEventDispatcher');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *  
 *  @langversion 3.
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.core.ElementWrapper}
 * @implements {org.apache.flex.core.IStrandWithModel}
 * @implements {org.apache.flex.events.IEventDispatcher}
 */
org.apache.flex.core.UIHTMLElementWrapper = function() {
  org.apache.flex.core.UIHTMLElementWrapper.base(this, 'constructor');
};
goog.inherits(org.apache.flex.core.UIHTMLElementWrapper, org.apache.flex.core.ElementWrapper);


/**
 * @private
 * @type {org.apache.flex.core.WrappedHTMLElement}
 */
org.apache.flex.core.UIHTMLElementWrapper.prototype._positioner;


/**
 * @protected
 * @type {Object}
 */
org.apache.flex.core.UIHTMLElementWrapper.prototype._model;


/**
 * @asparam bead The new bead.
 * @export
 * @override
 */
org.apache.flex.core.UIHTMLElementWrapper.prototype.addBead = function(bead) {
  if (!this._beads) {
    this._beads = org.apache.flex.utils.Language.Vector();
  }
  this._beads.push(bead);
  if (org.apache.flex.utils.Language.is(bead, org.apache.flex.core.IBeadModel)) {
    this._model = org.apache.flex.utils.Language.as(bead, org.apache.flex.core.IBeadModel);
  }
  bead.strand = this;
};


org.apache.flex.core.UIHTMLElementWrapper.prototype.get__positioner = function() {
  return this._positioner;
};


org.apache.flex.core.UIHTMLElementWrapper.prototype.set__positioner = function(value) {
  this._positioner = value;
};


org.apache.flex.core.UIHTMLElementWrapper.prototype.get__model = function() {
  if (this._model == null) {
    var /** @type {Object} */ m = org.apache.flex.core.ValuesManager["valuesImpl"].getValue(this, 'iBeadModel');
    if (m) {
      var /** @type {org.apache.flex.core.IBeadModel} */ b = new m();
      this.addBead(b);
    }
  }
  return this._model;
};


org.apache.flex.core.UIHTMLElementWrapper.prototype.set__model = function(value) {
  if (this._model != value) {
    if (org.apache.flex.utils.Language.is(value, org.apache.flex.core.IBead))
      this.addBead(org.apache.flex.utils.Language.as(value, org.apache.flex.core.IBead));
    else
      this._model = value;
    this.dispatchEvent(new org.apache.flex.events.Event("modelChanged"));
  }
};


org.apache.flex.core.UIHTMLElementWrapper.prototype.get__parent = function() {
  var /** @type {org.apache.flex.core.WrappedHTMLElement} */ p = this.positioner.parentNode;
  
  var /** @type {org.apache.flex.core.IParent} */ wrapper = p ? p.flexjs_wrapper : null;
  return wrapper;
};


Object.defineProperties(org.apache.flex.core.UIHTMLElementWrapper.prototype, /** @lends {org.apache.flex.core.UIHTMLElementWrapper.prototype} */ {
/** @export */
positioner: {
get: org.apache.flex.core.UIHTMLElementWrapper.prototype.get__positioner,
set: org.apache.flex.core.UIHTMLElementWrapper.prototype.set__positioner},
/** @export */
model: {
get: org.apache.flex.core.UIHTMLElementWrapper.prototype.get__model,
set: org.apache.flex.core.UIHTMLElementWrapper.prototype.set__model},
/** @export */
parent: {
get: org.apache.flex.core.UIHTMLElementWrapper.prototype.get__parent}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.core.UIHTMLElementWrapper.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'UIHTMLElementWrapper', qName: 'org.apache.flex.core.UIHTMLElementWrapper', kind: 'class' }], interfaces: [org.apache.flex.core.IStrandWithModel, org.apache.flex.events.IEventDispatcher] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.core.UIHTMLElementWrapper', org.apache.flex.core.UIHTMLElementWrapper);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.core.UIHTMLElementWrapper.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'positioner': { type: 'org.apache.flex.core.WrappedHTMLElement', access: 'readwrite', declaredBy: 'org.apache.flex.core.UIHTMLElementWrapper'},
        'model': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.flex.core.UIHTMLElementWrapper', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'modelChanged' } ] } ]; }},
        'parent': { type: 'org.apache.flex.core.IParent', access: 'readonly', declaredBy: 'org.apache.flex.core.UIHTMLElementWrapper'}
      };
    },
    methods: function () {
      return {
        'UIHTMLElementWrapper': { type: '', declaredBy: 'org.apache.flex.core.UIHTMLElementWrapper'},
        'addBead': { type: 'void', declaredBy: 'org.apache.flex.core.UIHTMLElementWrapper', parameters: function () { return [  { index: 1, type: 'org.apache.flex.core.IBead', optional: false } ]; }}
      };
    },
    metadata: function () { return [  ]; }
  };
};