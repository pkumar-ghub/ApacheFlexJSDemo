/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\core\IItemRendererProvider.as
 * org.apache.flex.core.IItemRendererProvider
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.core.IItemRendererProvider');

goog.require('org.apache.flex.utils.Language');



/**
 * @interface
 */
org.apache.flex.core.IItemRendererProvider = function() {
};
/**  * @type {boolean}
 */org.apache.flex.core.IItemRendererProvider.prototype.hasItemRenderer;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.core.IItemRendererProvider.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'IItemRendererProvider', qName: 'org.apache.flex.core.IItemRendererProvider', kind: 'interface' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.core.IItemRendererProvider', org.apache.flex.core.IItemRendererProvider);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.core.IItemRendererProvider.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'hasItemRenderer': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.flex.core.IItemRendererProvider'},
        'itemRenderer': { type: 'org.apache.flex.core.IFactory', access: 'readwrite', declaredBy: 'org.apache.flex.core.IItemRendererProvider'}
      };
    },
    methods: function () {return {};}
  };
};