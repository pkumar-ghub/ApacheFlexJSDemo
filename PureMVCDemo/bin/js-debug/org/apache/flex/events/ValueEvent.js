/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\events\ValueEvent.as
 * org.apache.flex.events.ValueEvent
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.events.ValueEvent');

goog.require('org.apache.flex.events.Event');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {Object=} value
 */
org.apache.flex.events.ValueEvent = function(type, bubbles, cancelable, value) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  value = typeof value !== 'undefined' ? value : null;
  org.apache.flex.events.ValueEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.value = value;
};
goog.inherits(org.apache.flex.events.ValueEvent, org.apache.flex.events.Event);


/**
 * @export
 * @type {Object}
 */
org.apache.flex.events.ValueEvent.prototype.value;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.events.ValueEvent.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ValueEvent', qName: 'org.apache.flex.events.ValueEvent', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.events.ValueEvent', org.apache.flex.events.ValueEvent);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.events.ValueEvent.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'value': { type: 'Object'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'ValueEvent': { type: '', declaredBy: 'org.apache.flex.events.ValueEvent', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'Boolean', optional: true },{ index: 3, type: 'Boolean', optional: true },{ index: 4, type: 'Object', optional: true } ]; }}
      };
    }
  };
};