/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\html\TitleBar.as
 * org.apache.flex.html.TitleBar
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.html.TitleBar');

goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.IBeadLayout');
goog.require('org.apache.flex.core.ITitleBarModel');
goog.require('org.apache.flex.core.ValuesManager');
goog.require('org.apache.flex.html.Group');
goog.require('org.apache.flex.core.IChrome');
goog.require('org.apache.flex.utils.Language');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.html.Group}
 * @implements {org.apache.flex.core.IChrome}
 */
org.apache.flex.html.TitleBar = function() {
  org.apache.flex.html.TitleBar.base(this, 'constructor');
  this.className = "TitleBar";
};
goog.inherits(org.apache.flex.html.TitleBar, org.apache.flex.html.Group);


/**
 * @asprivate
 * @export
 * @override
 */
org.apache.flex.html.TitleBar.prototype.addedToParent = function() {
  org.apache.flex.html.TitleBar.superClass_.addedToParent.apply(this);
  if (this.getBeadByType(org.apache.flex.core.IBeadLayout) == null)
    this.addBead(org.apache.flex.utils.Language.as(new (org.apache.flex.core.ValuesManager["valuesImpl"].getValue(this, "iBeadLayout"))(), org.apache.flex.core.IBead));
};


/**
 * @flexjsignorecoercion org.apache.flex.core.WrappedHTMLElement
 * @protected
 * @override
 */
org.apache.flex.html.TitleBar.prototype.createElement = function() {
  this.element = document.createElement('div');
  this.positioner = this.element;
  this.element.flexjs_wrapper = this;
  return this.element;
};


org.apache.flex.html.TitleBar.prototype.get__title = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).title;
};


org.apache.flex.html.TitleBar.prototype.set__title = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).title = value;
};


org.apache.flex.html.TitleBar.prototype.get__htmlTitle = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).htmlTitle;
};


org.apache.flex.html.TitleBar.prototype.set__htmlTitle = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).htmlTitle = value;
};


org.apache.flex.html.TitleBar.prototype.get__showCloseButton = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).showCloseButton;
};


org.apache.flex.html.TitleBar.prototype.set__showCloseButton = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.ITitleBarModel, true).showCloseButton = value;
};


Object.defineProperties(org.apache.flex.html.TitleBar.prototype, /** @lends {org.apache.flex.html.TitleBar.prototype} */ {
/** @export */
title: {
get: org.apache.flex.html.TitleBar.prototype.get__title,
set: org.apache.flex.html.TitleBar.prototype.set__title},
/** @export */
htmlTitle: {
get: org.apache.flex.html.TitleBar.prototype.get__htmlTitle,
set: org.apache.flex.html.TitleBar.prototype.set__htmlTitle},
/** @export */
showCloseButton: {
get: org.apache.flex.html.TitleBar.prototype.get__showCloseButton,
set: org.apache.flex.html.TitleBar.prototype.set__showCloseButton}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.html.TitleBar.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'TitleBar', qName: 'org.apache.flex.html.TitleBar', kind: 'class' }], interfaces: [org.apache.flex.core.IChrome] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.html.TitleBar', org.apache.flex.html.TitleBar);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.html.TitleBar.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'title': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.html.TitleBar'},
        'htmlTitle': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.html.TitleBar'},
        'showCloseButton': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.flex.html.TitleBar'}
      };
    },
    methods: function () {
      return {
        'TitleBar': { type: '', declaredBy: 'org.apache.flex.html.TitleBar'},
        'addedToParent': { type: 'void', declaredBy: 'org.apache.flex.html.TitleBar'}
      };
    }
  };
};