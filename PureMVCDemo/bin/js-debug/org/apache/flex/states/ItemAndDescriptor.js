/**
 * Generated by Apache Flex Cross-Compiler from org\apache\flex\states\ItemAndDescriptor.as
 * org.apache.flex.states.ItemAndDescriptor
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.states.ItemAndDescriptor');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 */
org.apache.flex.states.ItemAndDescriptor = function() {
  ;
};


/**
 * @export
 * @type {Object}
 */
org.apache.flex.states.ItemAndDescriptor.prototype.items;


/**
 * @export
 * @type {Array}
 */
org.apache.flex.states.ItemAndDescriptor.prototype.descriptor;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.states.ItemAndDescriptor.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ItemAndDescriptor', qName: 'org.apache.flex.states.ItemAndDescriptor', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.states.ItemAndDescriptor', org.apache.flex.states.ItemAndDescriptor);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.states.ItemAndDescriptor.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'items': { type: 'Object'},
        'descriptor': { type: 'Array'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'ItemAndDescriptor': { type: '', declaredBy: 'org.apache.flex.states.ItemAndDescriptor'}
      };
    },
    metadata: function () { return [  ]; }
  };
};