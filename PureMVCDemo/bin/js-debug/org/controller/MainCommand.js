/**
 * Generated by Apache Flex Cross-Compiler from org\controller\MainCommand.as
 * org.controller.MainCommand
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.controller.MainCommand');

goog.require('org.apache.flex.core.Application');
goog.require('org.facade.MainFacade');
goog.require('org.proxy.MainProxy');
goog.require('org.puremvc.as3.multicore.patterns.command.SimpleCommand');
goog.require('org.view.MainMediator');
goog.require('org.puremvc.as3.multicore.interfaces.ICommand');
goog.require('org.apache.flex.utils.Language');



/**
 * @constructor
 * @extends {org.puremvc.as3.multicore.patterns.command.SimpleCommand}
 * @implements {org.puremvc.as3.multicore.interfaces.ICommand}
 */
org.controller.MainCommand = function() {
  org.controller.MainCommand.base(this, 'constructor');
};
goog.inherits(org.controller.MainCommand, org.puremvc.as3.multicore.patterns.command.SimpleCommand);


/**
 * @export
 * @override
 */
org.controller.MainCommand.prototype.execute = function(notification) {
  this.facade.removeCommand(org.facade.MainFacade.STARTUP);
  this.facade.registerProxy(new org.proxy.MainProxy());
  this.facade.registerMediator(new org.view.MainMediator(org.apache.flex.utils.Language.as(notification.getBody(), org.apache.flex.core.Application)));
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.controller.MainCommand.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'MainCommand', qName: 'org.controller.MainCommand', kind: 'class' }], interfaces: [org.puremvc.as3.multicore.interfaces.ICommand] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.controller.MainCommand', org.controller.MainCommand);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.controller.MainCommand.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'execute': { type: 'void', declaredBy: 'org.controller.MainCommand', parameters: function () { return [  { index: 1, type: 'org.puremvc.as3.multicore.interfaces.INotification', optional: false } ]; }}
      };
    }
  };
};