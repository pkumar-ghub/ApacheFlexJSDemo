/**
 * Generated by Apache Flex Cross-Compiler from org\puremvc\as3\multicore\interfaces\ICommand.as
 * org.puremvc.as3.multicore.interfaces.ICommand
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.puremvc.as3.multicore.interfaces.ICommand');

goog.require('org.puremvc.as3.multicore.interfaces.INotifier');



/**
 * @interface
 * @extends {org.puremvc.as3.multicore.interfaces.INotifier}
 */
org.puremvc.as3.multicore.interfaces.ICommand = function() {
};
org.puremvc.as3.multicore.interfaces.ICommand.prototype.execute = function(notification) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.puremvc.as3.multicore.interfaces.ICommand.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ICommand', qName: 'org.puremvc.as3.multicore.interfaces.ICommand', kind: 'interface' }], interfaces: [org.puremvc.as3.multicore.interfaces.INotifier] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.puremvc.as3.multicore.interfaces.ICommand', org.puremvc.as3.multicore.interfaces.ICommand);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.puremvc.as3.multicore.interfaces.ICommand.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {return {};},
    methods: function () {
      return {
        'execute': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.ICommand', parameters: function () { return [  { index: 1, type: 'org.puremvc.as3.multicore.interfaces.INotification', optional: false } ]; }}
      };
    }
  };
};