/**
 * Generated by Apache Flex Cross-Compiler from org\puremvc\as3\multicore\interfaces\IFacade.as
 * org.puremvc.as3.multicore.interfaces.IFacade
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.puremvc.as3.multicore.interfaces.IFacade');

goog.require('org.puremvc.as3.multicore.interfaces.INotifier');
goog.require('org.apache.flex.utils.Language');



/**
 * @interface
 * @extends {org.puremvc.as3.multicore.interfaces.INotifier}
 */
org.puremvc.as3.multicore.interfaces.IFacade = function() {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.registerProxy = function(proxy) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.retrieveProxy = function(proxyName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.removeProxy = function(proxyName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.hasProxy = function(proxyName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.registerCommand = function(noteName, commandClassRef) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.removeCommand = function(notificationName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.hasCommand = function(notificationName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.registerMediator = function(mediator) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.retrieveMediator = function(mediatorName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.removeMediator = function(mediatorName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.hasMediator = function(mediatorName) {
};
org.puremvc.as3.multicore.interfaces.IFacade.prototype.notifyObservers = function(notification) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.puremvc.as3.multicore.interfaces.IFacade.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'IFacade', qName: 'org.puremvc.as3.multicore.interfaces.IFacade', kind: 'interface' }], interfaces: [org.puremvc.as3.multicore.interfaces.INotifier] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.puremvc.as3.multicore.interfaces.IFacade', org.puremvc.as3.multicore.interfaces.IFacade);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.puremvc.as3.multicore.interfaces.IFacade.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {return {};},
    methods: function () {
      return {
        'registerProxy': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'org.puremvc.as3.multicore.interfaces.IProxy', optional: false } ]; }},
        'retrieveProxy': { type: 'org.puremvc.as3.multicore.interfaces.IProxy', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'removeProxy': { type: 'org.puremvc.as3.multicore.interfaces.IProxy', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'hasProxy': { type: 'Boolean', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'registerCommand': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'Class', optional: false } ]; }},
        'removeCommand': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'hasCommand': { type: 'Boolean', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'registerMediator': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'org.puremvc.as3.multicore.interfaces.IMediator', optional: false } ]; }},
        'retrieveMediator': { type: 'org.puremvc.as3.multicore.interfaces.IMediator', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'removeMediator': { type: 'org.puremvc.as3.multicore.interfaces.IMediator', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'hasMediator': { type: 'Boolean', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'String', optional: false } ]; }},
        'notifyObservers': { type: 'void', declaredBy: 'org.puremvc.as3.multicore.interfaces.IFacade', parameters: function () { return [  { index: 1, type: 'org.puremvc.as3.multicore.interfaces.INotification', optional: false } ]; }}
      };
    }
  };
};