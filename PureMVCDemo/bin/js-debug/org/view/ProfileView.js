/**
 * Generated by Apache Flex Cross-Compiler from org\view\ProfileView.mxml
 * org.view.ProfileView
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.view.ProfileView');

goog.require('org.apache.flex.html.Panel');
goog.require('org.apache.flex.html.DataGrid');
goog.require('org.apache.flex.html.supportClasses.DataGridColumn');



/**
 * @constructor
 * @extends {org.apache.flex.html.Panel}
 */
org.view.ProfileView = function() {
  org.view.ProfileView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.html.DataGrid}
   */
  this.profileGridId_;
  
  /**
   * @private
   * @type {org.apache.flex.html.supportClasses.DataGridColumn}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.html.supportClasses.DataGridColumn}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.supportClasses.DataGridColumn}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.supportClasses.DataGridColumn}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([1,
'title',
true,
'Profiles View',
0,
0
  ]);
  
};
goog.inherits(org.view.ProfileView, org.apache.flex.html.Panel);



Object.defineProperties(org.view.ProfileView.prototype, /** @lends {org.view.ProfileView.prototype} */ {
/** @export */
    profileGridId: {
    /** @this {org.view.ProfileView} */
    get: function() {
      return this.profileGridId_;
    },
    /** @this {org.view.ProfileView} */
    set: function(value) {
      if (value != this.profileGridId_) {
        this.profileGridId_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'profileGridId', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {org.view.ProfileView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.view.ProfileView.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.flex.html.DataGrid,
4,
'id',
true,
'profileGridId',
'percentWidth',
true,
100.0,
'percentHeight',
true,
100.0,
'columns',
null, [org.apache.flex.html.supportClasses.DataGridColumn, 4, '_id', true, '$ID0', 'label', true, 'ID', 'dataField', true, 'id', 'columnWidth', true, 50, 0, 0, null, org.apache.flex.html.supportClasses.DataGridColumn, 4, '_id', true, '$ID1', 'label', true, 'Name', 'dataField', true, 'name', 'columnWidth', true, 150, 0, 0, null, org.apache.flex.html.supportClasses.DataGridColumn, 4, '_id', true, '$ID2', 'label', true, 'Company', 'dataField', true, 'company', 'columnWidth', true, 150, 0, 0, null, org.apache.flex.html.supportClasses.DataGridColumn, 4, '_id', true, '$ID3', 'label', true, 'DOB', 'dataField', true, 'doj', 'columnWidth', true, 150, 0, 0, null],
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  org.view.ProfileView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProfileView', qName: 'org.view.ProfileView', kind: 'class'  }] };
  
  
  /**
   * Prevent renaming of class. Needed for reflection.
   */
  goog.exportSymbol('org.view.ProfileView', org.view.ProfileView);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.view.ProfileView.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'profileGridId': { type: 'org.apache.flex.html.DataGrid', access: 'readwrite', declaredBy: 'org.view.ProfileView'}
      };
    },
    methods: function () {
      return {
        'ProfileView': { type: '', declaredBy: 'org.view.ProfileView'}
      };
    }
  };
};

  
  