/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/html/beads/DisableBead.as
 * org.apache.flex.html.beads.DisableBead
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.html.beads.DisableBead');

goog.require('org.apache.flex.core.IUIBase');
goog.require('org.apache.flex.events.IEventDispatcher');
goog.require('org.apache.flex.events.ValueEvent');
goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.utils.Language');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @implements {org.apache.flex.core.IBead}
 */
org.apache.flex.html.beads.DisableBead = function() {
};


/**
 * @private
 * @type {org.apache.flex.core.IStrand}
 */
org.apache.flex.html.beads.DisableBead.prototype._strand;


/**
 * @private
 * @type {boolean}
 */
org.apache.flex.html.beads.DisableBead.prototype._disabled;


/**
 * @private
 * @param {org.apache.flex.events.Event} e
 */
org.apache.flex.html.beads.DisableBead.prototype.disabledChangeHandler = function(e) {
  this.updateHost();
};


/**
 * @private
 */
org.apache.flex.html.beads.DisableBead.prototype.updateHost = function() {
  
  org.apache.flex.utils.Language.as(this._strand, Object).element.style.pointerEvents = this.disabled ? "none" : "auto";
};


/**
 * @private
 */
org.apache.flex.html.beads.DisableBead.prototype.throwChangeEvent = function() {
  if (this._strand) {
    org.apache.flex.utils.Language.as(this._strand, org.apache.flex.events.IEventDispatcher, true).dispatchEvent(new org.apache.flex.events.ValueEvent("disabledChange", this.disabled));
  }
};


org.apache.flex.html.beads.DisableBead.prototype.set__strand = function(value) {
  this._strand = value;
  this.updateHost();
};


org.apache.flex.html.beads.DisableBead.prototype.get__disabled = function() {
  return this._disabled;
};


org.apache.flex.html.beads.DisableBead.prototype.set__disabled = function(value) {
  if (value != this._disabled) {
    this._disabled = value;
    this.updateHost();
    this.throwChangeEvent();
  }
};


org.apache.flex.html.beads.DisableBead.prototype.get__host = function() {
  return org.apache.flex.utils.Language.as(this._strand, org.apache.flex.core.IUIBase);
};


Object.defineProperties(org.apache.flex.html.beads.DisableBead.prototype, /** @lends {org.apache.flex.html.beads.DisableBead.prototype} */ {
/** @export */
strand: {
set: org.apache.flex.html.beads.DisableBead.prototype.set__strand},
/** @export */
disabled: {
get: org.apache.flex.html.beads.DisableBead.prototype.get__disabled,
set: org.apache.flex.html.beads.DisableBead.prototype.set__disabled},
/** @export */
host: {
get: org.apache.flex.html.beads.DisableBead.prototype.get__host}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.html.beads.DisableBead.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'DisableBead', qName: 'org.apache.flex.html.beads.DisableBead', kind: 'class' }], interfaces: [org.apache.flex.core.IBead] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.html.beads.DisableBead', org.apache.flex.html.beads.DisableBead);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.html.beads.DisableBead.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'strand': { type: 'org.apache.flex.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.flex.html.beads.DisableBead'},
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.flex.html.beads.DisableBead'}
      };
    },
    methods: function () {
      return {
        'DisableBead': { type: '', declaredBy: 'org.apache.flex.html.beads.DisableBead'}
      };
    }
  };
};