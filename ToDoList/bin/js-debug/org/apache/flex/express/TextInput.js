/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/express/TextInput.as
 * org.apache.flex.express.TextInput
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.express.TextInput');

goog.require('org.apache.flex.events.Event');
goog.require('org.apache.flex.html.TextInput');
goog.require('org.apache.flex.html.accessories.NumericOnlyTextInputBead');
goog.require('org.apache.flex.html.accessories.PasswordInputBead');
goog.require('org.apache.flex.html.accessories.TextPromptBead');
goog.require('org.apache.flex.html.beads.DisableBead');



/**
 * @constructor
 * @extends {org.apache.flex.html.TextInput}
 */
org.apache.flex.express.TextInput = function() {
  org.apache.flex.express.TextInput.base(this, 'constructor');
};
goog.inherits(org.apache.flex.express.TextInput, org.apache.flex.html.TextInput);


/**
 * @private
 * @type {org.apache.flex.html.accessories.TextPromptBead}
 */
org.apache.flex.express.TextInput.prototype._promptBead;


/**
 * @private
 * @type {org.apache.flex.html.accessories.PasswordInputBead}
 */
org.apache.flex.express.TextInput.prototype._passwordBead;


/**
 * @private
 * @type {boolean}
 */
org.apache.flex.express.TextInput.prototype._secure = false;


/**
 * @private
 * @type {org.apache.flex.html.accessories.NumericOnlyTextInputBead}
 */
org.apache.flex.express.TextInput.prototype._numericBead;


/**
 * @private
 * @type {boolean}
 */
org.apache.flex.express.TextInput.prototype._numeric = false;


/**
 * @private
 * @type {org.apache.flex.html.beads.DisableBead}
 */
org.apache.flex.express.TextInput.prototype._disableBead;


/**
 * @private
 * @type {boolean}
 */
org.apache.flex.express.TextInput.prototype._enabled = true;


org.apache.flex.express.TextInput.prototype.get__prompt = function() {
  return this._promptBead ? this._promptBead.prompt : null;
};


org.apache.flex.express.TextInput.prototype.set__prompt = function(value) {
  if (this._promptBead == null) {
    this._promptBead = new org.apache.flex.html.accessories.TextPromptBead();
    this._promptBead.prompt = value ? value : "";
    this.addBead(this._promptBead);
  } else {
    this._promptBead.prompt = value ? value : "";
  }
  this.dispatchEvent(new org.apache.flex.events.Event("promptChanged"));
};


org.apache.flex.express.TextInput.prototype.get__secure = function() {
  return this._secure;
};


org.apache.flex.express.TextInput.prototype.set__secure = function(value) {
  this._secure = value;
  if (this._secure && this._passwordBead == null) {
    this._passwordBead = new org.apache.flex.html.accessories.PasswordInputBead();
    this.addBead(this._passwordBead);
  } else if (!this._secure && this._passwordBead != null) {
    this.removeBead(this._passwordBead);
    this._passwordBead = null;
  }
  this.dispatchEvent(new org.apache.flex.events.Event("secureChanged"));
};


org.apache.flex.express.TextInput.prototype.get__numeric = function() {
  return this._numeric;
};


org.apache.flex.express.TextInput.prototype.set__numeric = function(value) {
  this._numeric = value;
  if (this._numeric && this._numericBead == null) {
    this._numericBead = new org.apache.flex.html.accessories.NumericOnlyTextInputBead();
    this.addBead(this._numericBead);
  } else if (!this._numeric && this._numericBead != null) {
    this.removeBead(this._numericBead);
    this._numericBead = null;
  }
  this.dispatchEvent(new org.apache.flex.events.Event("numericChanged"));
};


org.apache.flex.express.TextInput.prototype.get__enabled = function() {
  return this._enabled;
};


org.apache.flex.express.TextInput.prototype.set__enabled = function(value) {
  this._enabled = value;
  if (this._disableBead == null) {
    this._disableBead = new org.apache.flex.html.beads.DisableBead();
    this.addBead(this._disableBead);
  }
  this._disableBead.disabled = !value;
  
  this.dispatchEvent(new org.apache.flex.events.Event("enabledChanged"));
};


Object.defineProperties(org.apache.flex.express.TextInput.prototype, /** @lends {org.apache.flex.express.TextInput.prototype} */ {
/** @export */
prompt: {
get: org.apache.flex.express.TextInput.prototype.get__prompt,
set: org.apache.flex.express.TextInput.prototype.set__prompt},
/** @export */
secure: {
get: org.apache.flex.express.TextInput.prototype.get__secure,
set: org.apache.flex.express.TextInput.prototype.set__secure},
/** @export */
numeric: {
get: org.apache.flex.express.TextInput.prototype.get__numeric,
set: org.apache.flex.express.TextInput.prototype.set__numeric},
/** @export */
enabled: {
get: org.apache.flex.express.TextInput.prototype.get__enabled,
set: org.apache.flex.express.TextInput.prototype.set__enabled}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.express.TextInput.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'TextInput', qName: 'org.apache.flex.express.TextInput', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.express.TextInput', org.apache.flex.express.TextInput);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.express.TextInput.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'prompt': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.express.TextInput', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'promptChanged' } ] } ]; }},
        'secure': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.flex.express.TextInput', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'secureChanged' } ] } ]; }},
        'numeric': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.flex.express.TextInput', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'numericChanged' } ] } ]; }},
        'enabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.flex.express.TextInput', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'enabledChanged' } ] } ]; }}
      };
    },
    methods: function () {
      return {
        'TextInput': { type: '', declaredBy: 'org.apache.flex.express.TextInput'}
      };
    }
  };
};