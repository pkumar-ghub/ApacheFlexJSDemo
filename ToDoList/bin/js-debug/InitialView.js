/**
 * Generated by Apache Flex Cross-Compiler from InitialView.mxml
 * InitialView
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('InitialView');

goog.require('org.apache.flex.express.View');
goog.require('org.apache.flex.html.beads.layouts.VerticalLayoutWithPaddingAndGap');
goog.require('org.apache.flex.html.Label');
goog.require('org.apache.flex.html.HGroup');
goog.require('org.apache.flex.express.TextInput');
goog.require('org.apache.flex.express.TextButton');
goog.require('org.apache.flex.html.Ul');
goog.require('org.apache.flex.events.MouseEvent');
goog.require('org.apache.flex.html.Li');



/**
 * @constructor
 * @extends {org.apache.flex.express.View}
 */
InitialView = function() {
  InitialView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.VerticalLayoutWithPaddingAndGap}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HGroup}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.express.TextInput}
   */
  this.txtInputId_;
  
  /**
   * @private
   * @type {org.apache.flex.express.TextButton}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Ul}
   */
  this.listId_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([1,
'beads',
null, [org.apache.flex.html.beads.layouts.VerticalLayoutWithPaddingAndGap, 2, '_id', true, '$ID0', 'gap', true, 5, 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(InitialView, org.apache.flex.express.View);



/**
 * @private
 */
InitialView.prototype.onAddClick = function() {
  var /** @type {org.apache.flex.html.Li} */ list = new org.apache.flex.html.Li();
  var /** @type {org.apache.flex.html.Label} */ label = new org.apache.flex.html.Label();
  label.text = this.txtInputId.text;
  list.addElement(label);
  this.listId.addElement(list);
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
InitialView.prototype.$EH0 = function(event)
{
  this.onAddClick();
};


Object.defineProperties(InitialView.prototype, /** @lends {InitialView.prototype} */ {
/** @export */
    txtInputId: {
    /** @this {InitialView} */
    get: function() {
      return this.txtInputId_;
    },
    /** @this {InitialView} */
    set: function(value) {
      if (value != this.txtInputId_) {
        this.txtInputId_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'txtInputId', null, value));
      }
    }
  },
  /** @export */
    listId: {
    /** @this {InitialView} */
    get: function() {
      return this.listId_;
    },
    /** @this {InitialView} */
    set: function(value) {
      if (value != this.listId_) {
        this.listId_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'listId', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {InitialView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = InitialView.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.flex.html.Label,
2,
'_id',
true,
'$ID1',
'text',
true,
'Enter Name: ',
0,
0,
null,
org.apache.flex.html.HGroup,
1,
'_id',
true,
'$ID3',
0,
0,
[org.apache.flex.express.TextInput, 2, 'id', true, 'txtInputId', 'width', true, 150, 0, 0, null, org.apache.flex.express.TextButton, 2, '_id', true, '$ID2', 'text', true, 'Click To Add', 0, 1, 'click', this.$EH0, null],
org.apache.flex.html.Ul,
1,
'id',
true,
'listId',
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  InitialView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'InitialView', qName: 'InitialView', kind: 'class'  }] };
  
  
  /**
   * Prevent renaming of class. Needed for reflection.
   */
  goog.exportSymbol('InitialView', InitialView);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
InitialView.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'txtInputId': { type: 'org.apache.flex.express.TextInput', access: 'readwrite', declaredBy: 'InitialView'},
        'listId': { type: 'org.apache.flex.html.Ul', access: 'readwrite', declaredBy: 'InitialView'}
      };
    },
    methods: function () {
      return {
        'InitialView': { type: '', declaredBy: 'InitialView'},
        '$EH0': { type: 'void', declaredBy: 'InitialView'}
      };
    }
  };
};

  
  