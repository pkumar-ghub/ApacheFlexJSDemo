/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/html/Alert.as
 * org.apache.flex.html.Alert
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.html.Alert');

goog.require('goog.events');
goog.require('org.apache.flex.core.IAlertModel');
goog.require('org.apache.flex.core.UIBase');
goog.require('org.apache.flex.html.Container');
goog.require('org.apache.flex.html.Label');
goog.require('org.apache.flex.html.TextButton');
goog.require('org.apache.flex.html.TitleBar');
goog.require('org.apache.flex.core.IPopUp');
goog.require('org.apache.flex.utils.Language');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @extends {org.apache.flex.core.UIBase}
 * @implements {org.apache.flex.core.IPopUp}
 */
org.apache.flex.html.Alert = function() {
  org.apache.flex.html.Alert.base(this, 'constructor');
  this.className = "Alert";
};
goog.inherits(org.apache.flex.html.Alert, org.apache.flex.core.UIBase);


/**
 * @export
 * @const
 * @type {number}
 */
org.apache.flex.html.Alert.YES = 0x000001;


/**
 * @export
 * @const
 * @type {number}
 */
org.apache.flex.html.Alert.NO = 0x000002;


/**
 * @export
 * @const
 * @type {number}
 */
org.apache.flex.html.Alert.OK = 0x000004;


/**
 * @export
 * @const
 * @type {number}
 */
org.apache.flex.html.Alert.CANCEL = 0x000008;


/**
 * @private
 * @type {org.apache.flex.html.TitleBar}
 */
org.apache.flex.html.Alert.prototype.titleBar;


/**
 * @private
 * @type {org.apache.flex.html.Label}
 */
org.apache.flex.html.Alert.prototype.label;


/**
 * @private
 * @type {org.apache.flex.html.Container}
 */
org.apache.flex.html.Alert.prototype.buttonArea;


/**
 * @override
 * @protected
 * @override
 */
org.apache.flex.html.Alert.prototype.createElement = function() {
  org.apache.flex.html.Alert.superClass_.createElement.apply(this);
  this.element.className = 'Alert';
  this.titleBar = new org.apache.flex.html.TitleBar();
  this.addElement(this.titleBar);
  this.titleBar.element.id = 'titleBar';
  this.titleBar.percentWidth = 100;
  this.titleBar.height = 24;
  this.titleBar.element.style.top = "0px";
  this.titleBar.element.style.right = "0px";
  this.titleBar.element.style.left = "0px";
  this.titleBar.element.style.marginBottom = "6px";
  this.label = new org.apache.flex.html.Label();
  this.addElement(this.label);
  this.label.element.style.display = "block";
  this.label.element.style.padding = "6px";
  this.label.element.style.left = "0px";
  this.label.element.style.right = "0px";
  this.label.element.style.whiteSpace = "normal";
  this.label.element.id = 'message';
  this.buttonArea = new org.apache.flex.html.Container();
  this.buttonArea.percentWidth = 100;
  this.buttonArea.height = 28;
  this.addElement(this.buttonArea);
  this.buttonArea.element.style.marginTop = "6px";
  this.buttonArea.element.style.marginBottom = "6px";
  this.buttonArea.element.style.padding = "2px";
  this.buttonArea.element.style.left = "0px";
  this.buttonArea.element.style.right = "0px";
  this.buttonArea.element.id = 'buttonArea';
  return this.element;
};


/**
 *  This static method is a convenience function to quickly create and display an Alert. The
 *  text and parent paramters are required, the others will default.
 * 
 *  @asparam String text The message content of the Alert.
 *  @asparam Object parent The object that hosts the pop-up.
 *  @asparam String title An optional title for the Alert.
 *  @asparam uint flags Identifies which buttons to display in the alert.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {string} text
 * @param {Object} parent
 * @param {string=} title
 * @param {number=} flags
 * @return {org.apache.flex.html.Alert}
 */
org.apache.flex.html.Alert.show = function(text, parent, title, flags) {
  title = typeof title !== 'undefined' ? title : "";
  flags = typeof flags !== 'undefined' ? flags : org.apache.flex.html.Alert.OK;
  var /** @type {org.apache.flex.html.Alert} */ alert = new org.apache.flex.html.Alert();
  alert.message = text;
  alert.title = title;
  alert.flags = flags;
  alert.show(parent);
  alert.positioner.style.margin = 'auto';
  alert.positioner.style.left = "50%";
  alert.positioner.style.top = "50%";
  alert.positioner.style.width = "200px";
  return alert;
};


/**
 *  Shows the Alert anchored to the given parent object which is usally a root component such
 *  as a UIView..
 * 
 *  @asparam Object parent The object that hosts the pop-up.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {Object} parent
 */
org.apache.flex.html.Alert.prototype.show = function(parent) {
  parent.addElement(this);
};


/**
 * @asparam event The event object.
 * @flexjsignorecoercion HTMLElement
 * @private
 * @param {org.apache.flex.events.Event} event
 */
org.apache.flex.html.Alert.prototype.dismissAlert = function(event) {
  var /** @type {HTMLElement} */ htmlElement = this.element;
  htmlElement.parentElement.removeChild(this.element);
};


org.apache.flex.html.Alert.prototype.get__title = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).title;
};


org.apache.flex.html.Alert.prototype.set__title = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).title = value;
  this.titleBar.title = value;
};


org.apache.flex.html.Alert.prototype.get__message = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).message;
};


org.apache.flex.html.Alert.prototype.set__message = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).message = value;
  this.label.text = value;
};


org.apache.flex.html.Alert.prototype.get__flags = function() {
  return org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).flags;
};


org.apache.flex.html.Alert.prototype.set__flags = function(value) {
  org.apache.flex.utils.Language.as(this.model, org.apache.flex.core.IAlertModel, true).flags = value;
  if (this.flags & org.apache.flex.html.Alert.OK) {
    var /** @type {org.apache.flex.html.TextButton} */ ok = new org.apache.flex.html.TextButton();
    this.buttonArea.addElement(ok);
    ok.text = 'OK';
    ok.element.style.margin = "4px";
    goog.events.listen(ok.element, 'click', org.apache.flex.utils.Language.closure(this.dismissAlert, this, 'dismissAlert'));
  }
  if (this.flags & org.apache.flex.html.Alert.CANCEL) {
    var /** @type {org.apache.flex.html.TextButton} */ cancel = new org.apache.flex.html.TextButton();
    this.buttonArea.addElement(cancel);
    cancel.text = 'Cancel';
    cancel.element.style.margin = "4px";
    goog.events.listen(cancel.element, 'click', org.apache.flex.utils.Language.closure(this.dismissAlert, this, 'dismissAlert'));
  }
  if (this.flags & org.apache.flex.html.Alert.YES) {
    var /** @type {org.apache.flex.html.TextButton} */ yes = new org.apache.flex.html.TextButton();
    this.buttonArea.addElement(yes);
    yes.text = 'YES';
    yes.element.style.margin = "4px";
    goog.events.listen(yes.element, 'click', org.apache.flex.utils.Language.closure(this.dismissAlert, this, 'dismissAlert'));
  }
  if (this.flags & org.apache.flex.html.Alert.NO) {
    var /** @type {org.apache.flex.html.TextButton} */ nob = new org.apache.flex.html.TextButton();
    this.buttonArea.addElement(nob);
    nob.text = 'NO';
    nob.element.style.margin = "4px";
    goog.events.listen(nob.element, 'click', org.apache.flex.utils.Language.closure(this.dismissAlert, this, 'dismissAlert'));
  }
};


Object.defineProperties(org.apache.flex.html.Alert.prototype, /** @lends {org.apache.flex.html.Alert.prototype} */ {
/** @export */
title: {
get: org.apache.flex.html.Alert.prototype.get__title,
set: org.apache.flex.html.Alert.prototype.set__title},
/** @export */
message: {
get: org.apache.flex.html.Alert.prototype.get__message,
set: org.apache.flex.html.Alert.prototype.set__message},
/** @export */
flags: {
get: org.apache.flex.html.Alert.prototype.get__flags,
set: org.apache.flex.html.Alert.prototype.set__flags}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.html.Alert.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Alert', qName: 'org.apache.flex.html.Alert', kind: 'class' }], interfaces: [org.apache.flex.core.IPopUp] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.html.Alert', org.apache.flex.html.Alert);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.html.Alert.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'title': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.html.Alert'},
        'message': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.html.Alert'},
        'flags': { type: 'uint', access: 'readwrite', declaredBy: 'org.apache.flex.html.Alert'}
      };
    },
    methods: function () {
      return {
        'Alert': { type: '', declaredBy: 'org.apache.flex.html.Alert'},
        '|show': { type: 'org.apache.flex.html.Alert', declaredBy: 'org.apache.flex.html.Alert', parameters: function () { return [  { index: 1, type: 'String', optional: false },{ index: 2, type: 'Object', optional: false },{ index: 3, type: 'String', optional: true },{ index: 4, type: 'uint', optional: true } ]; }},
        'show': { type: 'void', declaredBy: 'org.apache.flex.html.Alert', parameters: function () { return [  { index: 1, type: 'Object', optional: false } ]; }}
      };
    }
  };
};