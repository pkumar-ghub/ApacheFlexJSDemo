/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/svg/Rect.as
 * org.apache.flex.svg.Rect
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.svg.Rect');

goog.require('org.apache.flex.svg.GraphicShape');
goog.require('org.apache.flex.graphics.IDrawable');
goog.require('org.apache.flex.graphics.IRect');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.7
 * @constructor
 * @extends {org.apache.flex.svg.GraphicShape}
 * @implements {org.apache.flex.graphics.IRect}
 * @implements {org.apache.flex.graphics.IDrawable}
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 * @param {number=} rx
 * @param {number=} ry
 */
org.apache.flex.svg.Rect = function(x, y, width, height, rx, ry) {
  org.apache.flex.svg.Rect.base(this, 'constructor');
  x = typeof x !== 'undefined' ? x : 0;
  y = typeof y !== 'undefined' ? y : 0;
  width = typeof width !== 'undefined' ? width : 0;
  height = typeof height !== 'undefined' ? height : 0;
  rx = typeof rx !== 'undefined' ? rx : NaN;
  ry = typeof ry !== 'undefined' ? ry : NaN;
  this.x = x;
  this.y = y;
  this.width = width;
  this.height = height;
  this.rx = rx;
  this.ry = ry;
};
goog.inherits(org.apache.flex.svg.Rect, org.apache.flex.svg.GraphicShape);


/**
 * @private
 * @type {org.apache.flex.core.WrappedHTMLElement}
 */
org.apache.flex.svg.Rect.prototype._rect;


/**
 * @private
 * @type {number}
 */
org.apache.flex.svg.Rect.prototype._rx;


/**
 * @private
 * @type {number}
 */
org.apache.flex.svg.Rect.prototype._ry;


/**
 *  Draw the rectangle.
 *  @asparam xp The x position of the top-left corner of the rectangle.
 *  @asparam yp The y position of the top-left corner.
 *  @asparam width The width of the rectangle.
 *  @asparam height The height of the rectangle.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 *  @flexjsignorecoercion org.apache.flex.core.WrappedHTMLElement
 * @export
 * @param {number} xp
 * @param {number} yp
 * @param {number} width
 * @param {number} height
 */
org.apache.flex.svg.Rect.prototype.drawRect = function(xp, yp, width, height) {
  
  var /** @type {string} */ style = this.getStyleStr();
  if (this._rect == null) {
    this._rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
    this._rect.flexjs_wrapper = this;
    this.element.appendChild(this._rect);
  }
  this._rect.setAttribute('style', style);
  if (this.stroke) {
    this._rect.setAttribute('x', this.stroke.weight / 2);
    this._rect.setAttribute('y', this.stroke.weight / 2);
  } else {
    this._rect.setAttribute('x', 0);
    this._rect.setAttribute('y', 0);
  }
  this._rect.setAttribute('width', width);
  this._rect.setAttribute('height', height);
  this.resize(this.x, this.y, this.getBBox(this._rect));
};


/**
 * @protected
 * @override
 */
org.apache.flex.svg.Rect.prototype.drawImpl = function() {
  this.drawRect(0, 0, this.width, this.height);
};


/**
 * @export
 */
org.apache.flex.svg.Rect.prototype.draw = function() {
  this.drawImpl();
};


org.apache.flex.svg.Rect.prototype.get__rx = function() {
  return this._rx;
};


org.apache.flex.svg.Rect.prototype.set__rx = function(value) {
  this._rx = value;
};


org.apache.flex.svg.Rect.prototype.get__ry = function() {
  return this._ry;
};


org.apache.flex.svg.Rect.prototype.set__ry = function(value) {
  this._ry = value;
};


org.apache.flex.svg.Rect.prototype.get__transformElement = function() {
  return this._rect;
};


Object.defineProperties(org.apache.flex.svg.Rect.prototype, /** @lends {org.apache.flex.svg.Rect.prototype} */ {
/** @export */
rx: {
get: org.apache.flex.svg.Rect.prototype.get__rx,
set: org.apache.flex.svg.Rect.prototype.set__rx},
/** @export */
ry: {
get: org.apache.flex.svg.Rect.prototype.get__ry,
set: org.apache.flex.svg.Rect.prototype.set__ry},
/** @export */
transformElement: {
get: org.apache.flex.svg.Rect.prototype.get__transformElement}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.svg.Rect.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Rect', qName: 'org.apache.flex.svg.Rect', kind: 'class' }], interfaces: [org.apache.flex.graphics.IRect, org.apache.flex.graphics.IDrawable] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.svg.Rect', org.apache.flex.svg.Rect);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.svg.Rect.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'rx': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.flex.svg.Rect'},
        'ry': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.flex.svg.Rect'},
        'transformElement': { type: 'org.apache.flex.core.WrappedHTMLElement', access: 'readonly', declaredBy: 'org.apache.flex.svg.Rect'}
      };
    },
    methods: function () {
      return {
        'Rect': { type: '', declaredBy: 'org.apache.flex.svg.Rect', parameters: function () { return [  { index: 1, type: 'Number', optional: true },{ index: 2, type: 'Number', optional: true },{ index: 3, type: 'Number', optional: true },{ index: 4, type: 'Number', optional: true },{ index: 5, type: 'Number', optional: true },{ index: 6, type: 'Number', optional: true } ]; }},
        'drawRect': { type: 'void', declaredBy: 'org.apache.flex.svg.Rect', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false },{ index: 3, type: 'Number', optional: false },{ index: 4, type: 'Number', optional: false } ]; }},
        'draw': { type: 'void', declaredBy: 'org.apache.flex.svg.Rect'}
      };
    }
  };
};