/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/graphics/IRect.as
 * org.apache.flex.graphics.IRect
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.graphics.IRect');

goog.require('org.apache.flex.graphics.IGraphicShape');



/**
 * @interface
 * @extends {org.apache.flex.graphics.IGraphicShape}
 */
org.apache.flex.graphics.IRect = function() {
};
/**  * @type {number}
 */org.apache.flex.graphics.IRect.prototype.rx;
org.apache.flex.graphics.IRect.prototype.drawRect = function(xp, yp, width, height) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.graphics.IRect.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'IRect', qName: 'org.apache.flex.graphics.IRect', kind: 'interface' }], interfaces: [org.apache.flex.graphics.IGraphicShape] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.graphics.IRect', org.apache.flex.graphics.IRect);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.graphics.IRect.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'rx': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IRect'},
        'ry': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IRect'}
      };
    },
    methods: function () {
      return {
        'drawRect': { type: 'void', declaredBy: 'org.apache.flex.graphics.IRect', parameters: function () { return [  { index: 1, type: 'Number', optional: false },{ index: 2, type: 'Number', optional: false },{ index: 3, type: 'Number', optional: false },{ index: 4, type: 'Number', optional: false } ]; }}
      };
    }
  };
};