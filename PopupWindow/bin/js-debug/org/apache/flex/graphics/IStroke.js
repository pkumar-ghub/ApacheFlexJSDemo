/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/graphics/IStroke.as
 * org.apache.flex.graphics.IStroke
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.graphics.IStroke');




/**
 * @interface
 */
org.apache.flex.graphics.IStroke = function() {
};
/**  * @type {number}
 */org.apache.flex.graphics.IStroke.prototype.weight;
org.apache.flex.graphics.IStroke.prototype.addStrokeAttrib = function(s) {
};
org.apache.flex.graphics.IStroke.prototype.setLineStyle = function(weight, color, alpha, caps, joints, miterLimit) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.graphics.IStroke.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'IStroke', qName: 'org.apache.flex.graphics.IStroke', kind: 'interface' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.graphics.IStroke', org.apache.flex.graphics.IStroke);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.graphics.IStroke.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'weight': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.flex.graphics.IStroke'},
        'lineCap': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IStroke'},
        'lineJoin': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IStroke'},
        'miterLimit': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IStroke'},
        'lineDash': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.flex.graphics.IStroke'}
      };
    },
    methods: function () {
      return {
        'addStrokeAttrib': { type: 'String', declaredBy: 'org.apache.flex.graphics.IStroke', parameters: function () { return [  { index: 1, type: 'org.apache.flex.graphics.IGraphicShape', optional: false } ]; }},
        'setLineStyle': { type: 'void', declaredBy: 'org.apache.flex.graphics.IStroke', parameters: function () { return [  { index: 1, type: 'Number', optional: true },{ index: 2, type: 'uint', optional: true },{ index: 3, type: 'Number', optional: true },{ index: 4, type: 'String', optional: true },{ index: 5, type: 'String', optional: true },{ index: 6, type: 'Number', optional: true } ]; }}
      };
    }
  };
};