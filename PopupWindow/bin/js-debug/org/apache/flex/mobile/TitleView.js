/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/mobile/TitleView.as
 * org.apache.flex.mobile.TitleView
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.mobile.TitleView');

goog.require('org.apache.flex.core.IBeadController');
goog.require('org.apache.flex.core.ValuesManager');
goog.require('org.apache.flex.html.Group');
goog.require('org.apache.flex.mobile.IViewManagerView');
goog.require('org.apache.flex.utils.Language');



/**
 * @constructor
 * @extends {org.apache.flex.html.Group}
 * @implements {org.apache.flex.mobile.IViewManagerView}
 */
org.apache.flex.mobile.TitleView = function() {
  org.apache.flex.mobile.TitleView.base(this, 'constructor');
};
goog.inherits(org.apache.flex.mobile.TitleView, org.apache.flex.html.Group);


/**
 * @private
 * @type {string}
 */
org.apache.flex.mobile.TitleView.prototype._title;


/**
 * @export
 * @override
 */
org.apache.flex.mobile.TitleView.prototype.toString = function() {
  return this._title;
};


/**
 * @private
 * @type {org.apache.flex.mobile.IViewManager}
 */
org.apache.flex.mobile.TitleView.prototype._viewManager;


/**
 * @private
 * @type {org.apache.flex.core.IBeadController}
 */
org.apache.flex.mobile.TitleView.prototype._controller;


org.apache.flex.mobile.TitleView.prototype.get__title = function() {
  return this._title;
};


org.apache.flex.mobile.TitleView.prototype.set__title = function(value) {
  this._title = value;
};


org.apache.flex.mobile.TitleView.prototype.get__viewManager = function() {
  return this._viewManager;
};


org.apache.flex.mobile.TitleView.prototype.set__viewManager = function(value) {
  this._viewManager = value;
};


org.apache.flex.mobile.TitleView.prototype.get__controller = function() {
  if (this._controller == null) {
    this._controller = org.apache.flex.utils.Language.as(this.getBeadByType(org.apache.flex.core.IBeadController), org.apache.flex.core.IBeadController);
    if (this._controller == null) {
      var /** @type {Object} */ c = org.apache.flex.core.ValuesManager["valuesImpl"].getValue(this, "iBeadController");
      this._controller = org.apache.flex.utils.Language.as(new c(), org.apache.flex.core.IBeadController);
      this.addBead(this._controller);
    }
  }
  return this._controller;
};


org.apache.flex.mobile.TitleView.prototype.set__controller = function(value) {
  this._controller = value;
};


Object.defineProperties(org.apache.flex.mobile.TitleView.prototype, /** @lends {org.apache.flex.mobile.TitleView.prototype} */ {
/** @export */
title: {
get: org.apache.flex.mobile.TitleView.prototype.get__title,
set: org.apache.flex.mobile.TitleView.prototype.set__title},
/** @export */
viewManager: {
get: org.apache.flex.mobile.TitleView.prototype.get__viewManager,
set: org.apache.flex.mobile.TitleView.prototype.set__viewManager},
/** @export */
controller: {
get: org.apache.flex.mobile.TitleView.prototype.get__controller,
set: org.apache.flex.mobile.TitleView.prototype.set__controller}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.mobile.TitleView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'TitleView', qName: 'org.apache.flex.mobile.TitleView', kind: 'class' }], interfaces: [org.apache.flex.mobile.IViewManagerView] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.mobile.TitleView', org.apache.flex.mobile.TitleView);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.mobile.TitleView.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'title': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.mobile.TitleView'},
        'viewManager': { type: 'org.apache.flex.mobile.IViewManager', access: 'readwrite', declaredBy: 'org.apache.flex.mobile.TitleView'},
        'controller': { type: 'org.apache.flex.core.IBeadController', access: 'readwrite', declaredBy: 'org.apache.flex.mobile.TitleView'}
      };
    },
    methods: function () {
      return {
        'TitleView': { type: '', declaredBy: 'org.apache.flex.mobile.TitleView'},
        'toString': { type: 'String', declaredBy: 'org.apache.flex.mobile.TitleView'}
      };
    }
  };
};