/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/binding/ItemRendererSimpleBinding.as
 * org.apache.flex.binding.ItemRendererSimpleBinding
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.binding.ItemRendererSimpleBinding');

goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.IDocument');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @implements {org.apache.flex.core.IBead}
 * @implements {org.apache.flex.core.IDocument}
 */
org.apache.flex.binding.ItemRendererSimpleBinding = function() {
};


/**
 * @protected
 * @type {Object}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.source;


/**
 * @protected
 * @type {Object}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.document;


/**
 * @export
 * @type {string}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.destinationID;


/**
 * @export
 * @type {string}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.sourcePropertyName;


/**
 * @export
 * @type {string}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.destinationPropertyName;


/**
 *  @copy org.apache.flex.core.IDocument#setDocument()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {Object} document
 * @param {string=} id
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.setDocument = function(document, id) {
  id = typeof id !== 'undefined' ? id : null;
  this.document = document;
};


/**
 * @private
 * @param {org.apache.flex.events.Event} event
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.dataChangeHandler = function(event) {
  if (this.destinationID == "this") {
    this.document[this.destinationPropertyName] = this.document.data[this.sourcePropertyName];
  } else {
    this.document[this.destinationID][this.destinationPropertyName] = this.document.data[this.sourcePropertyName];
  }
};


org.apache.flex.binding.ItemRendererSimpleBinding.prototype.set__strand = function(value) {
  this.document.addEventListener("dataChange", org.apache.flex.utils.Language.closure(this.dataChangeHandler, this, 'dataChangeHandler'));
};


Object.defineProperties(org.apache.flex.binding.ItemRendererSimpleBinding.prototype, /** @lends {org.apache.flex.binding.ItemRendererSimpleBinding.prototype} */ {
/** @export */
strand: {
set: org.apache.flex.binding.ItemRendererSimpleBinding.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ItemRendererSimpleBinding', qName: 'org.apache.flex.binding.ItemRendererSimpleBinding', kind: 'class' }], interfaces: [org.apache.flex.core.IBead, org.apache.flex.core.IDocument] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.binding.ItemRendererSimpleBinding', org.apache.flex.binding.ItemRendererSimpleBinding);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.binding.ItemRendererSimpleBinding.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'destinationID': { type: 'String'},
        'sourcePropertyName': { type: 'String'},
        'destinationPropertyName': { type: 'String'}
      };
    },
    accessors: function () {
      return {
        'strand': { type: 'org.apache.flex.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.flex.binding.ItemRendererSimpleBinding'}
      };
    },
    methods: function () {
      return {
        'ItemRendererSimpleBinding': { type: '', declaredBy: 'org.apache.flex.binding.ItemRendererSimpleBinding'},
        'setDocument': { type: 'void', declaredBy: 'org.apache.flex.binding.ItemRendererSimpleBinding', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'String', optional: true } ]; }}
      };
    }
  };
};