/**
 * Generated by Apache Flex Cross-Compiler from org/apache/flex/binding/SimpleBinding.as
 * org.apache.flex.binding.SimpleBinding
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.flex.binding.SimpleBinding');

goog.require('org.apache.flex.events.IEventDispatcher');
goog.require('org.apache.flex.events.ValueChangeEvent');
goog.require('org.apache.flex.core.IBead');
goog.require('org.apache.flex.core.IBinding');
goog.require('org.apache.flex.core.IDocument');
goog.require('org.apache.flex.utils.Language');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @constructor
 * @implements {org.apache.flex.core.IBead}
 * @implements {org.apache.flex.core.IDocument}
 * @implements {org.apache.flex.core.IBinding}
 * @param {boolean=} isStatic
 */
org.apache.flex.binding.SimpleBinding = function(isStatic) {
  isStatic = typeof isStatic !== 'undefined' ? isStatic : false;
  this._isStatic = isStatic;
};


/**
 * @private
 * @type {boolean}
 */
org.apache.flex.binding.SimpleBinding.prototype._isStatic;


/**
 * @private
 * @type {Object}
 */
org.apache.flex.binding.SimpleBinding.prototype._destination;


/**
 * @private
 * @type {string}
 */
org.apache.flex.binding.SimpleBinding.prototype._sourceID;


/**
 * @private
 * @type {string}
 */
org.apache.flex.binding.SimpleBinding.prototype._destinationPropertyName;


/**
 * @private
 * @type {string}
 */
org.apache.flex.binding.SimpleBinding.prototype._sourcePropertyName;


/**
 * @protected
 * @type {org.apache.flex.events.IEventDispatcher}
 */
org.apache.flex.binding.SimpleBinding.prototype.dispatcher;


/**
 * @protected
 * @type {Object}
 */
org.apache.flex.binding.SimpleBinding.prototype.source;


/**
 * @protected
 * @type {Object}
 */
org.apache.flex.binding.SimpleBinding.prototype.document;


/**
 * @export
 * @type {string}
 */
org.apache.flex.binding.SimpleBinding.prototype.eventName;


/**
 *  @copy org.apache.flex.core.IDocument#setDocument()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion FlexJS 0.0
 * @export
 * @param {Object} document
 * @param {string=} id
 */
org.apache.flex.binding.SimpleBinding.prototype.setDocument = function(document, id) {
  id = typeof id !== 'undefined' ? id : null;
  this.document = document;
};


/**
 * @private
 * @param {org.apache.flex.events.Event} event
 */
org.apache.flex.binding.SimpleBinding.prototype.changeHandler = function(event) {
  if (event.type == org.apache.flex.events.ValueChangeEvent.VALUE_CHANGE) {
    var /** @type {org.apache.flex.events.ValueChangeEvent} */ vce = org.apache.flex.utils.Language.as(event, org.apache.flex.events.ValueChangeEvent);
    if (vce.propertyName != this.sourcePropertyName)
      return;
  }
  this.destination[this.destinationPropertyName] = this.source[this.sourcePropertyName];
};


/**
 * @private
 * @param {org.apache.flex.events.ValueChangeEvent} event
 */
org.apache.flex.binding.SimpleBinding.prototype.sourceChangeHandler = function(event) {
  if (event.propertyName != this.sourceID)
    return;
  if (this.dispatcher)
    this.dispatcher.removeEventListener(this.eventName, org.apache.flex.utils.Language.closure(this.changeHandler, this, 'changeHandler'));
  this.source = this.dispatcher = org.apache.flex.utils.Language.as(this.document[this.sourceID], org.apache.flex.events.IEventDispatcher);
  if (this.source) {
    this.dispatcher.addEventListener(this.eventName, org.apache.flex.utils.Language.closure(this.changeHandler, this, 'changeHandler'));
    this.destination[this.destinationPropertyName] = this.source[this.sourcePropertyName];
  }
};


org.apache.flex.binding.SimpleBinding.prototype.get__destination = function() {
  return this._destination;
};


org.apache.flex.binding.SimpleBinding.prototype.set__destination = function(value) {
  this._destination = value;
};


org.apache.flex.binding.SimpleBinding.prototype.get__sourceID = function() {
  return this._sourceID;
};


org.apache.flex.binding.SimpleBinding.prototype.set__sourceID = function(value) {
  this._sourceID = value;
};


org.apache.flex.binding.SimpleBinding.prototype.get__destinationPropertyName = function() {
  return this._destinationPropertyName;
};


org.apache.flex.binding.SimpleBinding.prototype.set__destinationPropertyName = function(value) {
  this._destinationPropertyName = value;
};


org.apache.flex.binding.SimpleBinding.prototype.get__sourcePropertyName = function() {
  return this._sourcePropertyName;
};


org.apache.flex.binding.SimpleBinding.prototype.set__sourcePropertyName = function(value) {
  this._sourcePropertyName = value;
};


org.apache.flex.binding.SimpleBinding.prototype.set__strand = function(value) {
  if (this.dispatcher)
    this.dispatcher.removeEventListener(this.eventName, org.apache.flex.utils.Language.closure(this.changeHandler, this, 'changeHandler'));
  if (this.destination == null)
    this.destination = value;
  if (this._isStatic) {
    this.source = this.document;
    this.dispatcher = org.apache.flex.utils.Language.as(this.source.staticEventDispatcher, org.apache.flex.events.IEventDispatcher);
  } else {
    if (this.sourceID != null) {
      this.source = this.dispatcher = org.apache.flex.utils.Language.as(this.document[this.sourceID], org.apache.flex.events.IEventDispatcher);
      if (this.source == null) {
        this.document.addEventListener("valueChange", org.apache.flex.utils.Language.closure(this.sourceChangeHandler, this, 'sourceChangeHandler'));
        return;
      }
    }
    else
      this.source = this.dispatcher = org.apache.flex.utils.Language.as(this.document, org.apache.flex.events.IEventDispatcher);
  }
  this.dispatcher.addEventListener(this.eventName, org.apache.flex.utils.Language.closure(this.changeHandler, this, 'changeHandler'));
  try {
    this.destination[this.destinationPropertyName] = this.source[this.sourcePropertyName];
  } catch (e) {
  }
};


Object.defineProperties(org.apache.flex.binding.SimpleBinding.prototype, /** @lends {org.apache.flex.binding.SimpleBinding.prototype} */ {
/** @export */
destination: {
get: org.apache.flex.binding.SimpleBinding.prototype.get__destination,
set: org.apache.flex.binding.SimpleBinding.prototype.set__destination},
/** @export */
sourceID: {
get: org.apache.flex.binding.SimpleBinding.prototype.get__sourceID,
set: org.apache.flex.binding.SimpleBinding.prototype.set__sourceID},
/** @export */
destinationPropertyName: {
get: org.apache.flex.binding.SimpleBinding.prototype.get__destinationPropertyName,
set: org.apache.flex.binding.SimpleBinding.prototype.set__destinationPropertyName},
/** @export */
sourcePropertyName: {
get: org.apache.flex.binding.SimpleBinding.prototype.get__sourcePropertyName,
set: org.apache.flex.binding.SimpleBinding.prototype.set__sourcePropertyName},
/** @export */
strand: {
set: org.apache.flex.binding.SimpleBinding.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.flex.binding.SimpleBinding.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'SimpleBinding', qName: 'org.apache.flex.binding.SimpleBinding', kind: 'class' }], interfaces: [org.apache.flex.core.IBead, org.apache.flex.core.IDocument, org.apache.flex.core.IBinding] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.flex.binding.SimpleBinding', org.apache.flex.binding.SimpleBinding);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.flex.binding.SimpleBinding.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'eventName': { type: 'String'}
      };
    },
    accessors: function () {
      return {
        'destination': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.flex.binding.SimpleBinding'},
        'sourceID': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.binding.SimpleBinding'},
        'destinationPropertyName': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.binding.SimpleBinding'},
        'sourcePropertyName': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.flex.binding.SimpleBinding'},
        'strand': { type: 'org.apache.flex.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.flex.binding.SimpleBinding'}
      };
    },
    methods: function () {
      return {
        'SimpleBinding': { type: '', declaredBy: 'org.apache.flex.binding.SimpleBinding', parameters: function () { return [  { index: 1, type: 'Boolean', optional: true } ]; }},
        'setDocument': { type: 'void', declaredBy: 'org.apache.flex.binding.SimpleBinding', parameters: function () { return [  { index: 1, type: 'Object', optional: false },{ index: 2, type: 'String', optional: true } ]; }}
      };
    }
  };
};