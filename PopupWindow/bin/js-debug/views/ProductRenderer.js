/**
 * Generated by Apache Flex Cross-Compiler from views\ProductRenderer.mxml
 * views.ProductRenderer
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('views.ProductRenderer');

goog.require('org.apache.flex.html.supportClasses.MXMLItemRenderer');
goog.require('org.apache.flex.html.beads.layouts.VerticalFlexLayout');
goog.require('org.apache.flex.binding.ItemRendererDataBinding');
goog.require('org.apache.flex.html.Label');
goog.require('org.apache.flex.html.MultilineLabel');



/**
 * @constructor
 * @extends {org.apache.flex.html.supportClasses.MXMLItemRenderer}
 */
views.ProductRenderer = function() {
  views.ProductRenderer.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.VerticalFlexLayout}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.binding.ItemRendererDataBinding}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.MultilineLabel}
   */
  this.description_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([2,
'percentWidth',
true,
100.0,
'beads',
null, [org.apache.flex.html.beads.layouts.VerticalFlexLayout, 1, '_id', true, '$ID0', 0, 0, null, org.apache.flex.binding.ItemRendererDataBinding, 1, '_id', true, '$ID1', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(views.ProductRenderer, org.apache.flex.html.supportClasses.MXMLItemRenderer);



;





views.ProductRenderer.prototype.get__obj = function() {
  org.apache.flex.utils.Language.trace("ItemRender");
  return org.apache.flex.utils.Language.as(this.data, Object);
};


Object.defineProperties(views.ProductRenderer.prototype, /** @lends {views.ProductRenderer.prototype} */ {
/** @export */
obj: {
get: views.ProductRenderer.prototype.get__obj}}
);Object.defineProperties(views.ProductRenderer.prototype, /** @lends {views.ProductRenderer.prototype} */ {
/** @export */
    description: {
    /** @this {views.ProductRenderer} */
    get: function() {
      return this.description_;
    },
    /** @this {views.ProductRenderer} */
    set: function(value) {
      if (value != this.description_) {
        this.description_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'description', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.ProductRenderer} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = views.ProductRenderer.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.flex.html.Label,
5,
'_id',
true,
'$ID2',
'percentWidth',
true,
100.0,
'height',
true,
30,
'style',
true,
'fontWeight:bold',
'text',
true,
'123',
0,
0,
null,
org.apache.flex.html.MultilineLabel,
3,
'id',
true,
'description',
'percentWidth',
true,
100.0,
'text',
true,
'12345',
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  views.ProductRenderer.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductRenderer', qName: 'views.ProductRenderer', kind: 'class'  }] };
  
  
  /**
   * Prevent renaming of class. Needed for reflection.
   */
  goog.exportSymbol('views.ProductRenderer', views.ProductRenderer);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.ProductRenderer.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'obj': { type: 'Object', access: 'readonly', declaredBy: 'views.ProductRenderer', metadata: function () { return [  ]; }},
        'description': { type: 'org.apache.flex.html.MultilineLabel', access: 'readwrite', declaredBy: 'views.ProductRenderer'}
      };
    },
    methods: function () {
      return {
        'ProductRenderer': { type: '', declaredBy: 'views.ProductRenderer'}
      };
    }
  };
};

  
  