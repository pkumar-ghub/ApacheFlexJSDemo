/**
 * Generated by Apache Flex Cross-Compiler from views\PopupView.mxml
 * views.PopupView
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('views.PopupView');

goog.require('org.apache.flex.html.Panel');
goog.require('org.apache.flex.core.SimpleCSSStyles');
goog.require('org.apache.flex.binding.ViewDataBinding');
goog.require('org.apache.flex.html.VGroup');
goog.require('org.apache.flex.html.Image');
goog.require('org.apache.flex.html.TextButton');
goog.require('org.apache.flex.events.Event');
goog.require('org.apache.flex.events.MouseEvent');
goog.require('org.apache.flex.events.ValueChangeEvent');
goog.require('org.apache.flex.utils.UIUtils');



/**
 * @constructor
 * @extends {org.apache.flex.html.Panel}
 */
views.PopupView = function() {
  views.PopupView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.binding.ViewDataBinding}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.VGroup}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Image}
   */
  this.image1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextButton}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([5,
'width',
true,
600,
'height',
true,
600,
'title',
true,
'FlexJS Title Window',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 2, '_id', true, '$ID0', 'backgroundColor', true, 13421772, 0, 0, null],
'beads',
null, [org.apache.flex.binding.ViewDataBinding, 1, '_id', true, '$ID1', 0, 0, null],
0,
1,
'initComplete',
this.$EH0
  ]);
  
};
goog.inherits(views.PopupView, org.apache.flex.html.Panel);



/**
 * @export
 * @type {string}
 */
views.PopupView.prototype.imgSource_;


/**
 * @private
 */
views.PopupView.prototype.init = function() {
  this.image1.src = this.imgSource;
};


/**
 * @private
 */
views.PopupView.prototype.onClose = function() {
  org.apache.flex.utils.UIUtils.removePopUp(this);
};


Object.defineProperties(views.PopupView.prototype, /** @lends {views.PopupView.prototype} */ {
/** @export
  * @type {string} */
imgSource: {
/** @this {views.PopupView} */
  get: function() {
  return this.imgSource_;
  },

/** @this {views.PopupView} */
set: function(value) {
if (value != this.imgSource_) {
    var oldValue = this.imgSource_;
    this.imgSource_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "imgSource", oldValue, value));
}
}}}
);/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
views.PopupView.prototype.$EH0 = function(event)
{
  this.init();
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
views.PopupView.prototype.$EH1 = function(event)
{
  this.onClose();
};


Object.defineProperties(views.PopupView.prototype, /** @lends {views.PopupView.prototype} */ {
/** @export */
    image1: {
    /** @this {views.PopupView} */
    get: function() {
      return this.image1_;
    },
    /** @this {views.PopupView} */
    set: function(value) {
      if (value != this.image1_) {
        this.image1_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'image1', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.PopupView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = views.PopupView.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.flex.html.VGroup,
3,
'_id',
true,
'$ID3',
'percentWidth',
true,
100.0,
'percentHeight',
true,
100.0,
0,
0,
[org.apache.flex.html.Image, 3, 'id', true, 'image1', 'percentWidth', true, 100.0, 'percentHeight', true, 95.0, 0, 0, null, org.apache.flex.html.TextButton, 2, '_id', true, '$ID2', 'text', true, 'Close', 0, 1, 'click', this.$EH1, null]
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  views.PopupView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'PopupView', qName: 'views.PopupView', kind: 'class'  }] };
  
  
  /**
   * Prevent renaming of class. Needed for reflection.
   */
  goog.exportSymbol('views.PopupView', views.PopupView);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.PopupView.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'imgSource': { type: 'String', access: 'readwrite', declaredBy: 'views.PopupView', metadata: function () { return [  ]; }},
        'image1': { type: 'org.apache.flex.html.Image', access: 'readwrite', declaredBy: 'views.PopupView'}
      };
    },
    methods: function () {
      return {
        'PopupView': { type: '', declaredBy: 'views.PopupView'},
        '$EH0': { type: 'void', declaredBy: 'views.PopupView'},
        '$EH1': { type: 'void', declaredBy: 'views.PopupView'}
      };
    }
  };
};

  
  